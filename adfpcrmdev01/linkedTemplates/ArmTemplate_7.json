{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfpcrmdev01"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/dataflowcalander')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "GTFScalendar",
								"type": "DatasetReference"
							},
							"name": "DataFlowCalendersource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SQLcalendar",
								"type": "DatasetReference"
							},
							"name": "sinktoSQLCalendar"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumntoconvertstringtodate"
						}
					],
					"script": "source(output(\n\t\tservice_id as string,\n\t\tmonday as string,\n\t\ttuesday as string,\n\t\twednesday as string,\n\t\tthursday as string,\n\t\tfriday as string,\n\t\tsaturday as string,\n\t\tsunday as string,\n\t\tstart_date as string,\n\t\tend_date as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> DataFlowCalendersource\nDataFlowCalendersource derive(start_date = toDate(substring(start_date,1,4)+\"-\"+substring(start_date,5,2)+\"-\"+substring(start_date,7,2)),\n\t\tend_date = toDate(substring(end_date,1,4)+\"-\"+substring(end_date,5,2)+\"-\"+substring(end_date,7,2))) ~> DerivedColumntoconvertstringtodate\nDerivedColumntoconvertstringtodate sink(input(\n\t\tService_id as string,\n\t\tMonday as string,\n\t\tTuesday as string,\n\t\tWednesday as string,\n\t\tThursday as string,\n\t\tFriday as string,\n\t\tSaturday as string,\n\t\tSunday as string,\n\t\tStart_date as date,\n\t\tEnd_date as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tService_id = service_id,\n\t\tMonday = monday,\n\t\tTuesday = tuesday,\n\t\tWednesday = wednesday,\n\t\tThursday = thursday,\n\t\tFriday = friday,\n\t\tSaturday = saturday,\n\t\tSunday = sunday,\n\t\tStart_date = start_date,\n\t\tEnd_date = end_date\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinktoSQLCalendar"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowcalendardates')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "GTFScalendar_dates",
								"type": "DatasetReference"
							},
							"name": "dataflowcalendardatessource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SQLcalendar_dates",
								"type": "DatasetReference"
							},
							"name": "sinktocalendardatesSQLtable"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumntoconvertstringtodate"
						}
					],
					"script": "source(output(\n\t\tservice_id as string,\n\t\tdate as string,\n\t\texception_type as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true) ~> dataflowcalendardatessource\ndataflowcalendardatessource derive(date = toDate(substring(date,1,4)+\"-\"+substring(date,5,2)+\"-\"+substring(date,7,2))) ~> DerivedColumntoconvertstringtodate\nDerivedColumntoconvertstringtodate sink(input(\n\t\tService_id as string,\n\t\tDate as date,\n\t\tException_type as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tService_id = service_id,\n\t\tDate = date,\n\t\tException_type = exception_type\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinktocalendardatesSQLtable"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowtosplitcodafile')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Delimited_Coda_csv",
								"type": "DatasetReference"
							},
							"name": "codacsvfromadls"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable_CODA0",
								"type": "DatasetReference"
							},
							"name": "SQLCODA0"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable_CODA_1",
								"type": "DatasetReference"
							},
							"name": "sinkCODA1"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable_CODA_21",
								"type": "DatasetReference"
							},
							"name": "sinkCODA21"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable_CODA_22",
								"type": "DatasetReference"
							},
							"name": "sinkCODA22"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable_CODA_23",
								"type": "DatasetReference"
							},
							"name": "sinkCODA23"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable_CODA_31",
								"type": "DatasetReference"
							},
							"name": "sinkCODA31"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable_CODA_32",
								"type": "DatasetReference"
							},
							"name": "sinkCODA32"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable_CODA_33",
								"type": "DatasetReference"
							},
							"name": "sinkCODA33"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable_CODA_8",
								"type": "DatasetReference"
							},
							"name": "sinkCODA8"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable_CODA_9",
								"type": "DatasetReference"
							},
							"name": "sinkCODA9"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable_CODA_4",
								"type": "DatasetReference"
							},
							"name": "sink1CODA4"
						}
					],
					"transformations": [
						{
							"name": "ConditionalSplit"
						},
						{
							"name": "AssignHeaderRecords"
						},
						{
							"name": "AssignOldBalancerecords"
						},
						{
							"name": "Movement2Split"
						},
						{
							"name": "Assign21Columns"
						},
						{
							"name": "Assign22Columns"
						},
						{
							"name": "Assign23Columns"
						},
						{
							"name": "ConditionalSplit1"
						},
						{
							"name": "AssignColumn31"
						},
						{
							"name": "AssignColumn32"
						},
						{
							"name": "Assigncolumn33"
						},
						{
							"name": "AssignColumn8"
						},
						{
							"name": "AssignColumn9"
						},
						{
							"name": "AssignColumn4"
						}
					],
					"script": "source(output(\n\t\tColumn_1 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> codacsvfromadls\ncodacsvfromadls split(like(Column_1,'0%'),\n\tlike(Column_1,'1%'),\n\tlike(Column_1,'2%'),\n\tlike(Column_1,'3%'),\n\tlike(Column_1,'8%'),\n\tlike(Column_1,'9%'),\n\tlike(Column_1,'4%'),\n\tdisjoint: true) ~> ConditionalSplit@(HeaderRecord0, OldBalance1, Movement2, AdditionalInformation3, Newbalance8, TrailerRecord9, Freecommunications4, Others)\nConditionalSplit@HeaderRecord0 derive(RegistratioinId = substring(Column_1,1,1),\n\t\tZeros = substring(Column_1,2,4),\n\t\tCreationdate = toDate(\"20\"+substring(Column_1,10,2)+\"-\"+substring(Column_1,8,2)+\"-\"+substring(Column_1,6,2)),\n\t\tBankIdentificationNumber = substring(Column_1,12,3),\n\t\tApplicationCode = substring(Column_1,15,2),\n\t\tDuplicate = substring(Column_1,17,1),\n\t\tBlankColumn1 = substring(Column_1,18,7),\n\t\tCodeSeperateApplication = substring(Column_1,84,5),\n\t\tTransactionReferrence = substring(Column_1,89,16),\n\t\tRelatedReferrence = substring(Column_1,105,16),\n\t\tBlankColumn2 = substring(Column_1,83,1),\n\t\tVersionCode = substring(Column_1,128,1),\n\t\tFileReference = substring(Column_1,25,10),\n\t\tNameAddressee = substring(Column_1,35,26),\n\t\tBIC = substring(Column_1,61,11),\n\t\tIdentificationNumberOfBelgium = substring(Column_1,72,11),\n\t\tBlankColumn3 = substring(Column_1,121,7)) ~> AssignHeaderRecords\nConditionalSplit@OldBalance1 derive({RegistrationID } = substring(Column_1,1,1),\n\t\tBankAccountType = substring(Column_1,2,1),\n\t\tSequencenumberofpaperaccount = substring(Column_1,3,3),\n\t\tAccountnumber = substring(Column_1,6,37),\n\t\tOldbalance = substring(Column_1,43,1),\n\t\tOldpay = toDecimal((substring(Column_1,44,12)+\".\"+substring(Column_1,56,3)),15,3),\n\t\tDateofoldbalance = toDate(\"20\"+substring(Column_1,63,2)+\"-\"+substring(Column_1,61,2)+\"-\"+substring(Column_1,59,2)),\n\t\tAccountholdername = substring(Column_1,65,26),\n\t\tAccounttagged = substring(Column_1,91,35),\n\t\t{Sequencenumberofthecodified } = substring(Column_1,126,3)) ~> AssignOldBalancerecords\nConditionalSplit@Movement2 split(like(Column_1,'21%'),\n\tlike(Column_1,'22%'),\n\tlike(Column_1,'23%'),\n\tdisjoint: true) ~> Movement2Split@(Movement21, Movement22, Movement23, NoMovement)\nMovement2Split@Movement21 derive(RegistrationID = substring(Column_1,1,1),\n\t\tArticleCode = substring(Column_1,2,1),\n\t\tSequencenumber = substring(Column_1,3,4),\n\t\tRetailnumber = substring(Column_1,7,4),\n\t\tbankreferencenumber = substring(Column_1,11,21),\n\t\tMovementsign = substring(Column_1,32,1),\n\t\tAmount = iif(substring(Column_1,32,1)==\"0\",toDecimal((\"+\"+substring(Column_1,33,12)+\".\"+substring(Column_1,45,3)),15,3),toDecimal((\"-\"+substring(Column_1,33,12)+\".\"+substring(Column_1,45,3)),15,3)),\n\t\t{Valuedate } = toDate(\"20\"+substring(Column_1,52,2)+\"-\"+substring(Column_1,50,2)+\"-\"+substring(Column_1,48,2)),\n\t\tOperationCode = substring(Column_1,54,8),\n\t\tcommunicationtype = substring(Column_1,62,1),\n\t\tCommunicationzone = substring(Column_1,63,53),\n\t\t{Accountdate } = toDate(\"20\"+substring(Column_1,120,2)+\"-\"+substring(Column_1,118,2)+\"-\"+substring(Column_1,116,2)),\n\t\t{Sequencenumberofpaperaccount } = substring(Column_1,122,3),\n\t\tCodeglobalization = substring(Column_1,125,1),\n\t\tCodesuite = substring(Column_1,126,1),\n\t\tBlankColumn = substring(Column_1,127,1),\n\t\tLinkcode = substring(Column_1,128,1)) ~> Assign21Columns\nMovement2Split@Movement22 derive(RegistrationID = substring(Column_1,1,1),\n\t\tArticleCode = substring(Column_1,2,1),\n\t\tSequencenumber = substring(Column_1,3,4),\n\t\tRetailnumber = substring(Column_1,7,4),\n\t\tCommunication = substring(Column_1,11,53),\n\t\tCustomerreference = substring(Column_1,64,35),\n\t\tBIC = substring(Column_1,99,11),\n\t\tBlankColumn1 = substring(Column_1,110,3),\n\t\tTransactiontype = substring(Column_1,113,1),\n\t\tISOCode = substring(Column_1,114,4),\n\t\tCategoryPurpose = substring(Column_1,118,4),\n\t\tPurpose = substring(Column_1,122,4),\n\t\tMoreCode = substring(Column_1,126,1),\n\t\tBlankColumn2 = substring(Column_1,127,1),\n\t\tLinkcode = substring(Column_1,128,1)) ~> Assign22Columns\nMovement2Split@Movement23 derive(RegistrationID = substring(Column_1,1,1),\n\t\tArticleCode = substring(Column_1,2,1),\n\t\tSequencenumber = substring(Column_1,3,4),\n\t\tRetailnumber = substring(Column_1,7,4),\n\t\tCounterpartyaccountnumber = substring(Column_1,11,37),\n\t\tNameofcounterparty = substring(Column_1,48,35),\n\t\tCommunication = substring(Column_1,83,43),\n\t\tSuiteCode = substring(Column_1,126,1),\n\t\tBlankColumn = substring(Column_1,127,1),\n\t\tLinkcode = substring(Column_1,128,1)) ~> Assign23Columns\nConditionalSplit@AdditionalInformation3 split(like(Column_1,'31%'),\n\tlike(Column_1,'32%'),\n\tlike(Column_1,'33%'),\n\tdisjoint: false) ~> ConditionalSplit1@(AdditionalInformation31, AdditionalInformation32, AdditionalInformation33, NoMatching)\nConditionalSplit1@AdditionalInformation31 derive(RegistrationID = substring(Column_1,1,1),\n\t\tArticleCode = substring(Column_1,2,1),\n\t\tSequencenumber = substring(Column_1,3,4),\n\t\tRetailnumber = substring(Column_1,7,4),\n\t\tAdditionalInformation = substring(Column_1,11,21),\n\t\tOperationCode = substring(Column_1,32,8),\n\t\tCommunicationCode = substring(Column_1,40,1),\n\t\tCommunication = substring(Column_1,41,73),\n\t\tBlankColumn1 = substring(Column_1,114,12),\n\t\tMoreCode = substring(Column_1,126,1),\n\t\tBlankColumn2 = substring(Column_1,127,1),\n\t\tLinkCode = substring(Column_1,128,1)) ~> AssignColumn31\nConditionalSplit1@AdditionalInformation32 derive(RegistrationID = substring(Column_1,1,1),\n\t\tArticleCode = substring(Column_1,2,1),\n\t\tSequencenumber = substring(Column_1,3,4),\n\t\tRetailnumber = substring(Column_1,7,4),\n\t\tCommunication = substring(Column_1,11,105),\n\t\tBlankColumn1 = substring(Column_1,116,10),\n\t\tCodesuite = substring(Column_1,126,1),\n\t\tBlankColumn2 = substring(Column_1,127,1),\n\t\tLinkCode = substring(Column_1,128,1)) ~> AssignColumn32\nConditionalSplit1@AdditionalInformation33 derive(RegistrationID = substring(Column_1,1,1),\n\t\tArticleCode = substring(Column_1,2,1),\n\t\tSequencenumber = substring(Column_1,3,4),\n\t\tRetailnumber = substring(Column_1,7,4),\n\t\tCommunication = substring(Column_1,11,90),\n\t\tBlankColumn1 = substring(Column_1,101,25),\n\t\tCodesuite = substring(Column_1,126,1),\n\t\tBlankColumn2 = substring(Column_1,127,1),\n\t\tLinkCode = substring(Column_1,128,1)) ~> Assigncolumn33\nConditionalSplit@Newbalance8 derive({RegistrationID } = substring(Column_1,1,1),\n\t\tSequencenumber = substring(Column_1,2,3),\n\t\tAccountnumber = substring(Column_1,5,37),\n\t\tSignCode = substring(Column_1,42,1),\n\t\tNewBalance = toDecimal((substring(Column_1,43,12)+\".\"+substring(Column_1,55,3)),15,3),\n\t\t{Dateofnewbalance } = toDate(\"20\"+substring(Column_1,62,2)+\"-\"+substring(Column_1,60,2)+\"-\"+substring(Column_1,58,2)),\n\t\tBlankColumn = substring(Column_1,64,64),\n\t\tLinkCode = substring(Column_1,128,1)) ~> AssignColumn8\nConditionalSplit@TrailerRecord9 derive(RegistrationID = substring(Column_1,1,1),\n\t\tBlankColumn1 = substring(Column_1,2,15),\n\t\tNumberofrecords = substring(Column_1,17,6),\n\t\tDebitRevenue = toDecimal((substring(Column_1,23,12)+\".\"+substring(Column_1,35,3)),15,3),\n\t\tCreditSales = toDecimal((substring(Column_1,38,12)+\".\"+substring(Column_1,50,3)),15,3),\n\t\tBlankColumn2 = substring(Column_1,53,75),\n\t\tMultiplefilecode = substring(Column_1,128,1)) ~> AssignColumn9\nConditionalSplit@Freecommunications4 derive(RegistrationID = substring(Column_1,1,1),\n\t\tBlankColumn1 = substring(Column_1,2,1),\n\t\tSequencenumber = substring(Column_1,3,4),\n\t\tRetailnumber = substring(Column_1,7,4),\n\t\tBlankColumn2 = substring(Column_1,11,22),\n\t\tTextofthefreemessage = substring(Column_1,33,80),\n\t\tBlankColumn3 = substring(Column_1,113,15),\n\t\tLinkCode = substring(Column_1,128,1)) ~> AssignColumn4\nAssignHeaderRecords sink(input(\n\t\tRecordIdentification as string,\n\t\tZeros as string,\n\t\tCreationDate as date,\n\t\tBankIdentificationNumber as string,\n\t\tApplicationCode as string,\n\t\tDuplicate as string,\n\t\tBlankColumn1 as string,\n\t\tFileReference as string,\n\t\tNameAddressee as string,\n\t\tBIC as string,\n\t\tIdentificationNumberofBelgium as string,\n\t\tBlankColumn2 as string,\n\t\tCodeSeperateApplication as string,\n\t\tTransactionReferrence as string,\n\t\tRelatedReferrence as string,\n\t\tBlankColumn3 as string,\n\t\tVersionCode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['DELETE FROM [dbo].[CODA-0]'],\n\tmapColumn(\n\t\tRecordIdentification = RegistratioinId,\n\t\tZeros,\n\t\tCreationDate = Creationdate,\n\t\tBankIdentificationNumber,\n\t\tApplicationCode,\n\t\tDuplicate,\n\t\tBlankColumn1,\n\t\tFileReference,\n\t\tNameAddressee,\n\t\tBIC,\n\t\tIdentificationNumberofBelgium = IdentificationNumberOfBelgium,\n\t\tBlankColumn2,\n\t\tCodeSeperateApplication,\n\t\tTransactionReferrence,\n\t\tRelatedReferrence,\n\t\tBlankColumn3,\n\t\tVersionCode\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SQLCODA0\nAssignOldBalancerecords sink(input(\n\t\tRegistrationID as string,\n\t\tBankAccountType as string,\n\t\tSequencenumberofpaperaccount as string,\n\t\tAccountnumber as string,\n\t\tOldbalance as string,\n\t\tOldpay as decimal(15,3),\n\t\tDateofoldbalance as date,\n\t\tAccountholdername as string,\n\t\tAccounttagged as string,\n\t\tSequencenumberofthecodified as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['\\nDELETE FROM [dbo].[CODA-1]'],\n\tmapColumn(\n\t\tRegistrationID = {RegistrationID },\n\t\tBankAccountType,\n\t\tSequencenumberofpaperaccount,\n\t\tAccountnumber,\n\t\tOldbalance,\n\t\tOldpay,\n\t\tDateofoldbalance,\n\t\tAccountholdername,\n\t\tAccounttagged,\n\t\tSequencenumberofthecodified = {Sequencenumberofthecodified }\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkCODA1\nAssign21Columns sink(input(\n\t\tRegistrationID as string,\n\t\tArticleCode as string,\n\t\tSequencenumber as string,\n\t\tRetailnumber as string,\n\t\tbankreferencenumber as string,\n\t\tMovementsign as string,\n\t\tAmount as decimal(15,3),\n\t\tValuedate as date,\n\t\tOperationCode as string,\n\t\tcommunicationtype as string,\n\t\tCommunicationzone as string,\n\t\tAccountdate as date,\n\t\tSequencenumberofpaperaccount as string,\n\t\tCodeglobalization as string,\n\t\tCodesuite as string,\n\t\tBlankColumn as string,\n\t\tLinkcode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['DELETE FROM [dbo].[CODA-21]'],\n\tmapColumn(\n\t\tRegistrationID,\n\t\tArticleCode,\n\t\tSequencenumber,\n\t\tRetailnumber,\n\t\tbankreferencenumber,\n\t\tMovementsign,\n\t\tAmount,\n\t\tValuedate = {Valuedate },\n\t\tOperationCode,\n\t\tcommunicationtype,\n\t\tCommunicationzone,\n\t\tAccountdate = {Accountdate },\n\t\tSequencenumberofpaperaccount = {Sequencenumberofpaperaccount },\n\t\tCodeglobalization,\n\t\tCodesuite,\n\t\tBlankColumn,\n\t\tLinkcode\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkCODA21\nAssign22Columns sink(input(\n\t\tRegistrationID as string,\n\t\tArticleCode as string,\n\t\tSequencenumber as string,\n\t\tRetailnumber as string,\n\t\tCommunication as string,\n\t\tCustomerreference as string,\n\t\tBIC as string,\n\t\tBlankColumn1 as string,\n\t\tTransactiontype as string,\n\t\tISOCode as string,\n\t\tCategoryPurpose as string,\n\t\tPurpose as string,\n\t\tMoreCode as string,\n\t\tBlankColumn2 as string,\n\t\tLinkcode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['DELETE FROM [dbo].[CODA-22]'],\n\tmapColumn(\n\t\tRegistrationID,\n\t\tArticleCode,\n\t\tSequencenumber,\n\t\tRetailnumber,\n\t\tCommunication,\n\t\tCustomerreference,\n\t\tBIC,\n\t\tBlankColumn1,\n\t\tTransactiontype,\n\t\tISOCode,\n\t\tCategoryPurpose,\n\t\tPurpose,\n\t\tMoreCode,\n\t\tBlankColumn2,\n\t\tLinkcode\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkCODA22\nAssign23Columns sink(input(\n\t\tRegistrationID as string,\n\t\tArticleCode as string,\n\t\tSequencenumber as string,\n\t\tRetailnumber as string,\n\t\tCounterpartyaccountnumber as string,\n\t\tNameofcounterparty as string,\n\t\tCommunication as string,\n\t\tSuiteCode as string,\n\t\tBlankColumn as string,\n\t\tLinkcode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['DELETE FROM [dbo].[CODA-23]'],\n\tmapColumn(\n\t\tRegistrationID,\n\t\tArticleCode,\n\t\tSequencenumber,\n\t\tRetailnumber,\n\t\tCounterpartyaccountnumber,\n\t\tNameofcounterparty,\n\t\tCommunication,\n\t\tSuiteCode,\n\t\tBlankColumn,\n\t\tLinkcode\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkCODA23\nAssignColumn31 sink(input(\n\t\tRegistrationID as string,\n\t\tArticleCode as string,\n\t\tSequencenumber as string,\n\t\tRetailnumber as string,\n\t\tAdditionalInformation as string,\n\t\tOperationCode as string,\n\t\tCommunicationCode as string,\n\t\tCommunication as string,\n\t\tBlankColumn1 as string,\n\t\tMoreCode as string,\n\t\tBlankColumn2 as string,\n\t\tLinkCode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['DELETE FROM [dbo].[CODA-31]'],\n\tmapColumn(\n\t\tRegistrationID,\n\t\tArticleCode,\n\t\tSequencenumber,\n\t\tRetailnumber,\n\t\tAdditionalInformation,\n\t\tOperationCode,\n\t\tCommunicationCode,\n\t\tCommunication,\n\t\tBlankColumn1,\n\t\tMoreCode,\n\t\tBlankColumn2,\n\t\tLinkCode\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkCODA31\nAssignColumn32 sink(input(\n\t\tRegistrationID as string,\n\t\tArticleCode as string,\n\t\tSequencenumber as string,\n\t\tRetailnumber as string,\n\t\tCommunication as string,\n\t\tBlankColumn1 as string,\n\t\tCodesuite as string,\n\t\tBlankColumn2 as string,\n\t\tLinkCode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['DELETE FROM [dbo].[CODA-32]'],\n\tmapColumn(\n\t\tRegistrationID,\n\t\tArticleCode,\n\t\tSequencenumber,\n\t\tRetailnumber,\n\t\tCommunication,\n\t\tBlankColumn1,\n\t\tCodesuite,\n\t\tBlankColumn2,\n\t\tLinkCode\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkCODA32\nAssigncolumn33 sink(input(\n\t\tRegistrationID as string,\n\t\tArticleCode as string,\n\t\tSequencenumber as string,\n\t\tRetailnumber as string,\n\t\tCommunication as string,\n\t\tBlankColumn1 as string,\n\t\tCodesuite as string,\n\t\tBlankColumn2 as string,\n\t\tLinkCode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['DELETE FROM [dbo].[CODA-33]'],\n\tmapColumn(\n\t\tRegistrationID,\n\t\tArticleCode,\n\t\tSequencenumber,\n\t\tRetailnumber,\n\t\tCommunication,\n\t\tBlankColumn1,\n\t\tCodesuite,\n\t\tBlankColumn2,\n\t\tLinkCode\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkCODA33\nAssignColumn8 sink(input(\n\t\tRegistrationID as string,\n\t\tSequencenumber as string,\n\t\tAccountnumber as string,\n\t\tSignCode as string,\n\t\tNewBalance as decimal(15,3),\n\t\tDateofnewbalance as date,\n\t\tBlankColumn as string,\n\t\tLinkCode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['DELETE FROM [dbo].[CODA-8]'],\n\tmapColumn(\n\t\tRegistrationID = {RegistrationID },\n\t\tSequencenumber,\n\t\tAccountnumber,\n\t\tSignCode,\n\t\tNewBalance,\n\t\tDateofnewbalance = {Dateofnewbalance },\n\t\tBlankColumn,\n\t\tLinkCode\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkCODA8\nAssignColumn9 sink(input(\n\t\tRegistrationID as string,\n\t\tBlankColumn1 as string,\n\t\tNumberofrecords as string,\n\t\tDebitRevenue as decimal(15,3),\n\t\tCreditSales as decimal(15,3),\n\t\tBlankColumn2 as string,\n\t\tMultiplefilecode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['DELETE FROM [dbo].[CODA-9]'],\n\tmapColumn(\n\t\tRegistrationID,\n\t\tBlankColumn1,\n\t\tNumberofrecords,\n\t\tDebitRevenue,\n\t\tCreditSales,\n\t\tBlankColumn2,\n\t\tMultiplefilecode\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkCODA9\nAssignColumn4 sink(input(\n\t\tRegistrationID as string,\n\t\tBlankColumn1 as string,\n\t\tSequenceNumber as string,\n\t\tRetailNumber as string,\n\t\tBlankColumn2 as string,\n\t\tTextofthefreemessage as string,\n\t\tBlankColumn3 as string,\n\t\tLinkCode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['DELETE FROM [dbo].[CODA-4]'],\n\tmapColumn(\n\t\tRegistrationID,\n\t\tBlankColumn1,\n\t\tSequenceNumber = Sequencenumber,\n\t\tRetailNumber = Retailnumber,\n\t\tBlankColumn2,\n\t\tTextofthefreemessage,\n\t\tBlankColumn3,\n\t\tLinkCode\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1CODA4"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Products_CRM_TecDev_copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Move Articles CSV to Articles folder",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFolderPath": "atlas/mnt020/csv/",
									"wildcardFileName": "*.articles.csv",
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Binary4",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Binary5",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "MNT020"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-01T21:19:03Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ATLASEIS779_DataflowSplits')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy CSV to SQL Table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"parallelCopies": 50,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "Code_segment"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText_ADLS_ReadCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQL_EIS779",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Send data to CRM",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_Using Joins",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT TOP (10) [Code_segment]\n      ,[Poste_segment]\n      ,[Id_transaction]\n      ,[Num_serie]\n      ,[Id_entreprise]\n      ,[Id_paiement]\n      ,[Code_moyen_paiement]\n      ,[Sens_paiement]\n      ,[Montant]\n      ,[Type_equipement]\n      ,[Date_ope]\n      ,[Name]\n      ,[Guid]\n  FROM [dbo].[EIS779_atlas]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DynamicsCrmSink",
								"writeBatchSize": 10,
								"writeBehavior": "upsert",
								"ignoreNullValues": false
							},
							"enableStaging": false,
							"parallelCopies": 50,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "tec_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Code_segment",
											"type": "String"
										},
										"sink": {
											"name": "tec_codesegment",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Sens_paiement",
											"type": "String"
										},
										"sink": {
											"name": "tec_senspaiement",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Num_serie",
											"type": "String"
										},
										"sink": {
											"name": "tec_numserie",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Id_paiement",
											"type": "String"
										},
										"sink": {
											"name": "tec_idpaiement",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Guid",
											"type": "Guid"
										},
										"sink": {
											"name": "tec_eis779atlasid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "Code_moyen_paiement",
											"type": "String"
										},
										"sink": {
											"name": "tec_codemoyenpaiement",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Poste_segment",
											"type": "String"
										},
										"sink": {
											"name": "tec_postesegment",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Id_entreprise",
											"type": "String"
										},
										"sink": {
											"name": "tec_identreprise",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Date_ope",
											"type": "DateTime"
										},
										"sink": {
											"name": "tec_dateope",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Id_transaction",
											"type": "String"
										},
										"sink": {
											"name": "tec_idtransaction",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Type_equipement"
										},
										"sink": {
											"name": "tec_typeequipment"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "EIS779_SQL_CRM",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "tecdevcrmconnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dataflowusingsplittoSegments",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy CSV to SQL Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_EIS779_Segments_plit",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"dataflowSource": {},
									"SQLSegment0": {},
									"SQLSegment1": {},
									"SQLSegment2": {},
									"SQLSegment3": {},
									"SQLSegment4": {},
									"SQLSegment5": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					},
					{
						"name": "Copy data_Using Joins",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "dataflowusingsplittoSegments",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "  SELECT Top(100)\n     E003.Code_segment\n    ,E003.Poste_segment\n    ,E003.Id_transaction\n    ,E001.Num_serie\n    ,E002.Id_entreprise\n    ,E003.Id_paiement\n    ,E003.Code_moyen_paiement\n    ,E003.Sens_paiement\n    ,E003.Montant\n    ,10 AS Type_Eqiupment\n    ,E001.Date_ope\n    ,E000.Plateforme\n\t,NEWID() AS Unique_Id\n  FROM [dbo].[EIS779_SEGMENT_001] E001\n  LEFT JOIN [dbo].[EIS779_SEGMENT_002] E002\n    ON E001.Id_transaction = E002.Id_transaction\n  JOIN [dbo].[EIS779_SEGMENT_003] E003\n    ON E001.Id_transaction = E003.Id_transaction\n  JOIN [dbo].[EIS779_SEGMENT_000] E000\n    ON E000.Code_segment = '000'\n  ORDER by E001.id_transaction",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"parallelCopies": 50,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Code_segment",
											"type": "String"
										},
										"sink": {
											"name": "Code_segment",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Poste_segment",
											"type": "String"
										},
										"sink": {
											"name": "Poste_segment",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Id_transaction",
											"type": "String"
										},
										"sink": {
											"name": "Id_transaction",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Num_serie",
											"type": "String"
										},
										"sink": {
											"name": "Num_serie",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Id_entreprise",
											"type": "String"
										},
										"sink": {
											"name": "Id_entreprise",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Id_paiement",
											"type": "String"
										},
										"sink": {
											"name": "Id_paiement",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Code_moyen_paiement",
											"type": "String"
										},
										"sink": {
											"name": "Code_moyen_paiement",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Sens_paiement",
											"type": "String"
										},
										"sink": {
											"name": "Sens_paiement",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Montant",
											"type": "Double"
										},
										"sink": {
											"name": "Montant",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Type_Eqiupment",
											"type": "Int32"
										},
										"sink": {
											"name": "Type_equipement",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Date_ope",
											"type": "DateTime"
										},
										"sink": {
											"name": "Date_ope",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Plateforme",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Unique_Id",
											"type": "Guid"
										},
										"sink": {
											"name": "Guid",
											"type": "Guid"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "EIS779_SQL_Join",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLEIS779ATLAS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-08-10T18:35:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CODA File')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Coda file",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Binary1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CODFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dataflowtoSplitCodaFile",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy Coda file",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflowtosplitcodafile",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"codacsvfromadls": {},
									"SQLCODA0": {},
									"sinkCODA1": {},
									"sinkCODA21": {},
									"sinkCODA22": {},
									"sinkCODA23": {},
									"sinkCODA31": {},
									"sinkCODA32": {},
									"sinkCODA33": {},
									"sinkCODA8": {},
									"sinkCODA9": {},
									"sink1CODA4": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-08-03T17:26:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflowtosplitcodafile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CODA File_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "pipeline_CODAIntegration",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "binary_CODAFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "binary_CODAcsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dataflowtoSplitCodaFile",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "pipeline_CODAIntegration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflowtosplitcodafile",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"codacsvfromadls": {},
									"SQLCODA0": {},
									"sinkCODA1": {},
									"sinkCODA21": {},
									"sinkCODA22": {},
									"sinkCODA23": {},
									"sinkCODA31": {},
									"sinkCODA32": {},
									"sinkCODA33": {},
									"sinkCODA8": {},
									"sinkCODA9": {},
									"sink1CODA4": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-07-30T18:27:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflowtosplitcodafile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CODA_File_SQL_TecDev')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "pipeline_CODAIntegration",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "binary_CODAFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "binary_CODAcsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dataflowtoSplitCodaFile",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "pipeline_CODAIntegration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflowtosplitcodafile",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"codacsvfromadls": {},
									"SQLCODA0": {},
									"sinkCODA1": {},
									"sinkCODA21": {},
									"sinkCODA22": {},
									"sinkCODA23": {},
									"sinkCODA31": {},
									"sinkCODA32": {},
									"sinkCODA33": {},
									"sinkCODA8": {},
									"sinkCODA9": {},
									"sink1CODA4": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					},
					{
						"name": "Copy SQL Join to CODA Integration",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "dataflowtoSplitCodaFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select\nNEWID() AS GUID,\nZero.RecordIdentification AS Zero_RecordIdentification,\nZero.CreationDate AS Zero_CreationDate,\nZero.BankIdentificationNumber AS Zero_BankIdentificationNumber,\nZero.ApplicationCode AS Zero_ApplicationCode,\nZero.Duplicate AS Zero_Duplicate,\nZero.FileReference AS Zero_FileReference,\nZero.NameAddressee AS Zero_NameAddressee,\nZero.BIC AS Zero_BIC,\nZero.IdentificationNumberofBelgium AS Zero_IdentificationNumberofBelgium,\nZero.CodeSeperateApplication AS Zero_CodeSeperateApplication,\nZero.TransactionReferrence AS Zero_TransactionReferrence,\nZero.RelatedReferrence AS Zero_RelatedReferrence,\nOne.RegistrationID AS One_RegistrationId,\ncase One.BankAccountType\n     when '0' then 899240000\n     when '1' then 899240001\n     when '2' then 899240002\n     when '3' then 899240003\n     end AS One_BankAccountType,\nOne.Sequencenumberofpaperaccount AS One_Sequencenumberofpaperaccount,\nOne.Accountnumber AS One_Accountnumber,\ncase One.Oldbalance\n     when '0' then 899240000\n     when '1' then 899240001\n     end AS One_Oldbalance,\nOne.Oldpay AS One_Oldpay,\nOne.Dateofoldbalance AS One_Dateofoldbalance,\nOne.Accountholdername AS One_Accountholdername,\nOne.Accounttagged AS One_Accounttagged,\nOne.Sequencenumberofthecodified AS One_Sequencenumberofthecodified,\nFour.RegistrationID AS Four_RegistrationID,\nFour.Textofthefreemessage AS Four_Textofthefreemessage,\nEight.RegistrationID AS Eight_RegistrationId,\nEight.Sequencenumber AS Eight_Sequencenumber,\nEight.Accountnumber AS Eight_Accountnumber,\ncase Eight.SignCode\n     when '0' then 899240000\n     when '1' then 899240001\n     end AS Eight_SignCode,\nEight.NewBalance AS Eight_NewBalance ,\nEight.Dateofnewbalance AS Eight_Dateofnewbalance,\nNine.RegistrationID AS Nine_RegistrationId,\nNine.Numberofrecords AS Nine_Numberofrecords,\nNine.DebitRevenue AS Nine_DebitRevenue,\nNine.CreditSales AS Nine_CreditSales\nfrom [dbo].[CODA-0] Zero\nleft join [dbo].[CODA-1] One on 1=1 \nleft join [dbo].[CODA-4] Four on 1=1 \nleft join [dbo].[CODA-8] Eight on 1=1 \nleft join [dbo].[CODA-9] Nine on 1=1 ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GUID",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "GUID",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										}
									},
									{
										"source": {
											"name": "Zero_RecordIdentification",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Zero_RecordIdentification",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Zero_CreationDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Zero_CreationDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Zero_BankIdentificationNumber",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Zero_BankIdentificationNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Zero_ApplicationCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Zero_ApplicationCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Zero_Duplicate",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Zero_Duplicate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Zero_FileReference",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Zero_FileReference",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Zero_NameAddressee",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Zero_NameAddressee",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Zero_BIC",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Zero_BIC",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Zero_IdentificationNumberofBelgium",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Zero_IdentificationNumberofBelgium",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Zero_CodeSeperateApplication",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Zero_CodeSeperateApplication",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Zero_TransactionReferrence",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Zero_TransactionReferrence",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Zero_RelatedReferrence",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Zero_RelatedReferrence",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "One_RegistrationId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "One_RegistrationId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "One_BankAccountType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "One_BankAccountType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "One_Sequencenumberofpaperaccount",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "One_Sequencenumberofpaperaccount",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "One_Accountnumber",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "One_Accountnumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "One_Oldbalance",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "One_Oldbalance",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "One_Oldpay",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "One_Oldpay",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "One_Dateofoldbalance",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "One_Dateofoldbalance",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "One_Accountholdername",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "One_Accountholdername",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "One_Accounttagged",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "One_Accounttagged",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "One_Sequencenumberofthecodified",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "One_Sequencenumberofthecodified",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Four_RegistrationID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Four_RegistrationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Four_Textofthefreemessage",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Four_Textofthefreemessage",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Eight_RegistrationId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Eight_RegistrationId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Eight_Sequencenumber",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Eight_Sequencenumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Eight_Accountnumber",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Eight_Accountnumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Eight_SignCode",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Eight_SignCode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Eight_NewBalance",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "Eight_NewBalance",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Eight_Dateofnewbalance",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Eight_Dateofnewbalance",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Nine_RegistrationId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Nine_RegistrationId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Nine_Numberofrecords",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Nine_Numberofrecords",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Nine_DebitRevenue",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "Nine_DebitRevenue",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Nine_CreditSales",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "Nine_CreditSales",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable_CODAIntegration",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable_CODAJoin",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy CODA to CRM",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy SQL Join to CODA Integration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DynamicsCrmSink",
								"writeBatchSize": 10,
								"writeBehavior": "upsert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GUID",
											"type": "Guid"
										},
										"sink": {
											"name": "bd_codaid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "Zero_CreationDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "bd_creation_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Zero_BankIdentificationNumber",
											"type": "String"
										},
										"sink": {
											"name": "bd_bank_identification_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Zero_ApplicationCode",
											"type": "String"
										},
										"sink": {
											"name": "bd_application_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Zero_Duplicate",
											"type": "String"
										},
										"sink": {
											"name": "bd_duplicate",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Zero_FileReference",
											"type": "String"
										},
										"sink": {
											"name": "bd_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Zero_NameAddressee",
											"type": "String"
										},
										"sink": {
											"name": "bd_name_addressee",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Zero_BIC",
											"type": "String"
										},
										"sink": {
											"name": "bd_bic",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Zero_IdentificationNumberofBelgium",
											"type": "String"
										},
										"sink": {
											"name": "bd_identification_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Zero_CodeSeperateApplication",
											"type": "String"
										},
										"sink": {
											"name": "bd_code_seperate_application",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Zero_TransactionReferrence",
											"type": "String"
										},
										"sink": {
											"name": "bd_transaction_reference",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Zero_RelatedReferrence",
											"type": "String"
										},
										"sink": {
											"name": "bd_related_reference",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "One_BankAccountType",
											"type": "Int32"
										},
										"sink": {
											"name": "bd_account_structure",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "One_Sequencenumberofpaperaccount",
											"type": "String"
										},
										"sink": {
											"name": "bd_sequence_number_statement",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "One_Accountnumber",
											"type": "String"
										},
										"sink": {
											"name": "bd_account_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "One_Oldbalance",
											"type": "Int32"
										},
										"sink": {
											"name": "bd_old_balance_sign",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "One_Oldpay",
											"type": "Decimal"
										},
										"sink": {
											"name": "bd_oldbalance",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "One_Dateofoldbalance",
											"type": "DateTime"
										},
										"sink": {
											"name": "bd_old_balance_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "One_Accountholdername",
											"type": "String"
										},
										"sink": {
											"name": "bd_accountholder_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "One_Accounttagged",
											"type": "String"
										},
										"sink": {
											"name": "bd_account_description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "One_Sequencenumberofthecodified",
											"type": "String"
										},
										"sink": {
											"name": "bd_sequence_number_coded_statement",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Four_Textofthefreemessage",
											"type": "String"
										},
										"sink": {
											"name": "bd_freecommunication",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Eight_Sequencenumber",
											"type": "String"
										},
										"sink": {
											"name": "bd_sequence_number_statement_8",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Eight_Accountnumber",
											"type": "String"
										},
										"sink": {
											"name": "bd_account_number_8",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Eight_SignCode",
											"type": "Int32"
										},
										"sink": {
											"name": "bd_new_balance_sign",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Eight_NewBalance",
											"type": "Decimal"
										},
										"sink": {
											"name": "bd_new_balance",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Eight_Dateofnewbalance",
											"type": "DateTime"
										},
										"sink": {
											"name": "bd_new_balance_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Nine_Numberofrecords",
											"type": "String"
										},
										"sink": {
											"name": "bd_number_of_records",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Nine_DebitRevenue",
											"type": "Decimal"
										},
										"sink": {
											"name": "bd_debit_movement",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Nine_CreditSales",
											"type": "Decimal"
										},
										"sink": {
											"name": "bd_credit_movement",
											"type": "Decimal"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable_CODAEntity",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DynamicsCrm_TecDev_CODA",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy SQL Join to Payment Table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy CODA to CRM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select\nNEWID() AS GUID,\n'CODA' AS Data_Source,\nZero.FileReference AS Zero_FileReference,\nCODA.GUID AS CODA_Guid,\nTwoOne.RegistrationID AS TwoOne_RegistrationId,\nTwoOne.Sequencenumber AS TwoOne_Sequencenumber,\nTwoOne.Retailnumber AS TwoOne_Retailnumber,\nTwoOne.bankreferencenumber AS TwoOne_bankreferencenumber,\ncase TwoOne.Movementsign\n     when '0' then 899240000\n     when '1' then 899240001\n     end AS TwoOne_Movementsign,\nTwoOne.Amount AS TwoOne_Amount,\nTwoOne.Valuedate AS TwoOne_Valuedate,\nTwoOne.OperationCode AS TwoOne_OperationCode,\ncase TwoOne.communicationtype\n     when '0' then 899240000\n     when '1' then 899240001\n     end AS TwoOne_communicationtype,\nTwoOne.Communicationzone AS TwoOne_Communicationzone,\nTwoOne.Accountdate AS TwoOne_Accountdate,\nTwoOne.Sequencenumberofpaperaccount AS TwoOne_Sequencenumberofpaperaccount,\nTwoOne.Codeglobalization AS TwoOne_Codeglobalization,\nTwoTwo.RegistrationID AS TwoTwo_RegistrationId,\nTwoTwo.Communication AS TwoTwo_Communication,\nTwoTwo.Customerreference AS TwoTwo_Customerreference,\nTwoTwo.BIC AS TwoTwo_BIC,\ncase TwoTwo.Transactiontype\n     when '0' then 899240000\n     when '1' then 899240001\n\t when '2' then 899240002\n     when '3' then 899240003\n\t when '4' then 899240004\n     end AS TwoTwo_Transactiontype,\nTwoTwo.ISOCode AS TwoTwo_ISOCode,\nTwoTwo.CategoryPurpose AS TwoTwo_CategoryPurpose,\nTwoTwo.Purpose AS TwoTwo_Purpose,\nTwoThree.RegistrationID AS TwoThree_RegistrationId,\nTwoThree.Counterpartyaccountnumber AS TwoThree_Counterpartyaccountnumber,\nTwoThree.Nameofcounterparty AS TwoThree_Nameofcounterparty,\nTwoThree.Communication AS TwoThree_Communication,\nThreeOne.RegistrationID AS ThreeOne_RegistrationId,\nThreeOne.AdditionalInformation AS ThreeOne_AdditionalInformation,\nThreeOne.OperationCode AS ThreeOne_OperationCode,\ncase ThreeOne.CommunicationCode\n     when '0' then 899240000\n     when '1' then 899240001\n     end AS ThreeOne_CommunicationCode,\nThreeOne.Communication AS ThreeOne_Communication,\nThreeTwo.RegistrationID AS ThreeTwo_RegistrationId,\nThreeTwo.Communication AS ThreeTwo_Communication,\nThreeThree.RegistrationID AS ThreeThree_RegistrationId,\nThreeThree.Communication AS ThreeThree_Communication \nfrom [dbo].[CODA-21] TwoOne\nleft join [dbo].[CODA-22] TwoTwo on TwoOne.[Sequencenumber] = TwoTwo.[Sequencenumber]\nleft join [dbo].[CODA-23] TwoThree on TwoOne.[Sequencenumber] = TwoThree.[Sequencenumber]\nleft join [dbo].[CODA-31] ThreeOne on TwoOne.[Sequencenumber] = ThreeOne.[Sequencenumber]\nleft join [dbo].[CODA-32] ThreeTwo on TwoOne.[Sequencenumber] = ThreeTwo.[Sequencenumber]\nleft join [dbo].[CODA-33] ThreeThree on TwoOne.[Sequencenumber] = ThreeThree.[Sequencenumber]\nleft join [dbo].[CODA-0]  Zero       on 1=1 \nleft join [dbo].[CODAIntegration]  CODA  on 1=1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GUID",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "GUID",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										}
									},
									{
										"source": {
											"name": "Zero_FileReference",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Zero_FileReference",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CODA_Guid",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "CODA_Guid",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										}
									},
									{
										"source": {
											"name": "TwoOne_RegistrationId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TwoOne_RegistrationId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TwoOne_Sequencenumber",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TwoOne_Sequencenumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TwoOne_Retailnumber",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TwoOne_Retailnumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TwoOne_bankreferencenumber",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TwoOne_bankreferencenumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TwoOne_Movementsign",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TwoOne_Movementsign",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TwoOne_Amount",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "TwoOne_Amount",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "TwoOne_Valuedate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "TwoOne_Valuedate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "TwoOne_OperationCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TwoOne_OperationCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TwoOne_communicationtype",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TwoOne_communicationtype",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TwoOne_Communicationzone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TwoOne_Communicationzone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TwoOne_Accountdate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "TwoOne_Accountdate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "TwoOne_Sequencenumberofpaperaccount",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TwoOne_Sequencenumberofpaperaccount",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TwoOne_Codeglobalization",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TwoOne_Codeglobalization",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TwoTwo_RegistrationId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TwoTwo_RegistrationId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TwoTwo_Communication",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TwoTwo_Communication",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TwoTwo_Customerreference",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TwoTwo_Customerreference",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TwoTwo_BIC",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TwoTwo_BIC",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TwoTwo_Transactiontype",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TwoTwo_Transactiontype",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TwoTwo_ISOCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TwoTwo_ISOCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TwoTwo_CategoryPurpose",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TwoTwo_CategoryPurpose",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TwoTwo_Purpose",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TwoTwo_Purpose",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TwoThree_RegistrationId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TwoThree_RegistrationId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TwoThree_Counterpartyaccountnumber",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TwoThree_Counterpartyaccountnumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TwoThree_Nameofcounterparty",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TwoThree_Nameofcounterparty",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TwoThree_Communication",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TwoThree_Communication",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ThreeOne_RegistrationId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ThreeOne_RegistrationId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ThreeOne_AdditionalInformation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ThreeOne_AdditionalInformation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ThreeOne_OperationCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ThreeOne_OperationCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ThreeOne_CommunicationCode",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ThreeOne_CommunicationCode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ThreeOne_Communication",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ThreeOne_Communication",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ThreeTwo_RegistrationId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ThreeTwo_RegistrationId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ThreeTwo_Communication",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ThreeTwo_Communication",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ThreeThree_RegistrationId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ThreeThree_RegistrationId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ThreeThree_Communication",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ThreeThree_Communication",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Data_Source",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Data_Source",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable_CODAIntegration",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable_PaymentJoin",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Payment To CRM",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy SQL Join to Payment Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DynamicsCrmSink",
								"writeBatchSize": 10,
								"writeBehavior": "upsert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GUID",
											"type": "Guid"
										},
										"sink": {
											"name": "bd_paymentid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "Zero_FileReference",
											"type": "String"
										},
										"sink": {
											"name": "bd_paymentreferenceidname",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CODA_Guid",
											"type": "Guid"
										},
										"sink": {
											"name": "bd_paymentreferenceid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "TwoOne_Sequencenumber",
											"type": "String"
										},
										"sink": {
											"name": "bd_continuous_sequence_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TwoOne_Retailnumber",
											"type": "String"
										},
										"sink": {
											"name": "bd_detail_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TwoOne_bankreferencenumber",
											"type": "String"
										},
										"sink": {
											"name": "bd_bank_reference_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TwoOne_Movementsign",
											"type": "Int32"
										},
										"sink": {
											"name": "bd_movement_sign",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "TwoOne_Amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "bd_movement_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "TwoOne_Valuedate",
											"type": "DateTime"
										},
										"sink": {
											"name": "bd_movement_value_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "TwoOne_OperationCode",
											"type": "String"
										},
										"sink": {
											"name": "bd_transaction_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TwoOne_communicationtype",
											"type": "Int32"
										},
										"sink": {
											"name": "bd_communication_type",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "TwoOne_Communicationzone",
											"type": "String"
										},
										"sink": {
											"name": "bd_communication_zone",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TwoOne_Accountdate",
											"type": "DateTime"
										},
										"sink": {
											"name": "bd_entry_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "TwoOne_Sequencenumberofpaperaccount",
											"type": "String"
										},
										"sink": {
											"name": "bd_sequence_number_statement",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TwoOne_Codeglobalization",
											"type": "String"
										},
										"sink": {
											"name": "bd_globalisation_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TwoTwo_Communication",
											"type": "String"
										},
										"sink": {
											"name": "bd_communication",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TwoTwo_Customerreference",
											"type": "String"
										},
										"sink": {
											"name": "bd_customer_reference",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TwoTwo_BIC",
											"type": "String"
										},
										"sink": {
											"name": "bd_movement_bic",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TwoTwo_Transactiontype",
											"type": "Int32"
										},
										"sink": {
											"name": "bd_type_of_rtransaction",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "TwoTwo_ISOCode",
											"type": "String"
										},
										"sink": {
											"name": "bd_iso_reason_return_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TwoTwo_CategoryPurpose",
											"type": "String"
										},
										"sink": {
											"name": "bd_category_purpose",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TwoTwo_Purpose",
											"type": "String"
										},
										"sink": {
											"name": "bd_purpose",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TwoThree_Counterpartyaccountnumber",
											"type": "String"
										},
										"sink": {
											"name": "bd_counterpartys_account_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TwoThree_Nameofcounterparty",
											"type": "String"
										},
										"sink": {
											"name": "bd_counterpartys_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TwoThree_Communication",
											"type": "String"
										},
										"sink": {
											"name": "bd_communication_ctd",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ThreeOne_AdditionalInformation",
											"type": "String"
										},
										"sink": {
											"name": "bd_bank_reference_number_info",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ThreeOne_OperationCode",
											"type": "String"
										},
										"sink": {
											"name": "bd_transaction_code_info",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ThreeOne_CommunicationCode",
											"type": "Int32"
										},
										"sink": {
											"name": "bd_communication_type_info",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ThreeOne_Communication",
											"type": "String"
										},
										"sink": {
											"name": "bd_communication_zone_info",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ThreeTwo_Communication",
											"type": "String"
										},
										"sink": {
											"name": "bd_communication_ctd_info",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ThreeThree_Communication",
											"type": "String"
										},
										"sink": {
											"name": "bd_communication_ctd_info_2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Data_Source",
											"type": "String"
										},
										"sink": {
											"name": "bd_data_source",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable_PaymentJoin",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DynamicsCrmEntity_Payment",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "CODA"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-17T20:03:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflowtosplitcodafile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EIS779_CRM_TecDev')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy CSV to SQL Table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data to Merge CSV files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"parallelCopies": 50,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "Code_segment",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText_ADLS_ReadCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQL_EIS779",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Send data to CRM",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_Using Joins",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT TOP (10) [Code_segment]\n      ,[Poste_segment]\n      ,[Id_transaction]\n      ,[Num_serie]\n      ,[Id_entreprise]\n      ,[Id_paiement]\n      ,[Code_moyen_paiement]\n      ,[Sens_paiement]\n      ,[Montant]\n      ,[Type_equipement]\n      ,[Date_ope]\n      ,[Name]\n      ,[Guid]\n  FROM [dbo].[EIS779_atlas]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DynamicsCrmSink",
								"writeBatchSize": 10,
								"writeBehavior": "upsert",
								"ignoreNullValues": false
							},
							"enableStaging": false,
							"parallelCopies": 50,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "tec_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Code_segment",
											"type": "String"
										},
										"sink": {
											"name": "tec_codesegment",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Sens_paiement",
											"type": "String"
										},
										"sink": {
											"name": "tec_senspaiement",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Num_serie",
											"type": "String"
										},
										"sink": {
											"name": "tec_numserie",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Id_paiement",
											"type": "String"
										},
										"sink": {
											"name": "tec_idpaiement",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Guid",
											"type": "Guid"
										},
										"sink": {
											"name": "tec_eis779atlasid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "Code_moyen_paiement",
											"type": "String"
										},
										"sink": {
											"name": "tec_codemoyenpaiement",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Poste_segment",
											"type": "String"
										},
										"sink": {
											"name": "tec_postesegment",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Id_entreprise",
											"type": "String"
										},
										"sink": {
											"name": "tec_identreprise",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Date_ope",
											"type": "DateTime"
										},
										"sink": {
											"name": "tec_dateope",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Id_transaction",
											"type": "String"
										},
										"sink": {
											"name": "tec_idtransaction",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Type_equipement"
										},
										"sink": {
											"name": "tec_typeequipment"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "EIS779_SQL_CRM",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "tecdevcrmconnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dataflowusingsplittoSegments",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy CSV to SQL Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_EIS779_Segments_plit",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"dataflowSource": {},
									"SQLSegment0": {},
									"SQLSegment1": {},
									"SQLSegment2": {},
									"SQLSegment3": {},
									"SQLSegment4": {},
									"SQLSegment5": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					},
					{
						"name": "Copy data_Using Joins",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "dataflowusingsplittoSegments",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "  SELECT Top(100)\n     E003.Code_segment\n    ,E003.Poste_segment\n    ,E003.Id_transaction\n    ,E001.Num_serie\n    ,E002.Id_entreprise\n    ,E003.Id_paiement\n    ,E003.Code_moyen_paiement\n    ,E003.Sens_paiement\n    ,E003.Montant\n    ,10 AS Type_Eqiupment\n    ,E001.Date_ope\n    ,E000.Plateforme\n\t,NEWID() AS Unique_Id\n  FROM [dbo].[EIS779_SEGMENT_001] E001\n  LEFT JOIN [dbo].[EIS779_SEGMENT_002] E002\n    ON E001.Id_transaction = E002.Id_transaction\n  JOIN [dbo].[EIS779_SEGMENT_003] E003\n    ON E001.Id_transaction = E003.Id_transaction\n  JOIN [dbo].[EIS779_SEGMENT_000] E000\n    ON E000.Code_segment = '000'\n  ORDER by E001.id_transaction",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"parallelCopies": 50,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Code_segment",
											"type": "String"
										},
										"sink": {
											"name": "Code_segment",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Poste_segment",
											"type": "String"
										},
										"sink": {
											"name": "Poste_segment",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Id_transaction",
											"type": "String"
										},
										"sink": {
											"name": "Id_transaction",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Num_serie",
											"type": "String"
										},
										"sink": {
											"name": "Num_serie",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Id_entreprise",
											"type": "String"
										},
										"sink": {
											"name": "Id_entreprise",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Id_paiement",
											"type": "String"
										},
										"sink": {
											"name": "Id_paiement",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Code_moyen_paiement",
											"type": "String"
										},
										"sink": {
											"name": "Code_moyen_paiement",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Sens_paiement",
											"type": "String"
										},
										"sink": {
											"name": "Sens_paiement",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Montant",
											"type": "Double"
										},
										"sink": {
											"name": "Montant",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Type_Eqiupment",
											"type": "Int32"
										},
										"sink": {
											"name": "Type_equipement",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Date_ope",
											"type": "DateTime"
										},
										"sink": {
											"name": "Date_ope",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Plateforme",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Unique_Id",
											"type": "Guid"
										},
										"sink": {
											"name": "Guid",
											"type": "Guid"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "EIS779_SQL_Join",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLEIS779ATLAS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data to Merge CSV files",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText_EIS779_Source_CSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText_EIS779_Target",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "EIS-779"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-17T20:03:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EIS779_CRM_TecDev_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"variables": {
					"fileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "EIS-779"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-20T16:23:21Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GTFS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GTFSZipfilestoDLS",
						"description": "t",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET",
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ZipFileGTFS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Binary_GTFSZipFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Get Metadata of GTFS folder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "GTFSZipfilestoDLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DLSV2GTFS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata of GTFS folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata of GTFS folder').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "SwitchToSQLTables",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@item().name",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "agency.txt",
												"activities": [
													{
														"name": "Copy data to Agency SQL Table",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "DelimitedTextSource",
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															},
															"sink": {
																"type": "AzureSqlSink"
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "agency_id",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Agency_id",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "agency_name",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Agency_name",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "agency_url",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Agency_url",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "agency_timezone",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Agency_timezone",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "agency_lang",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Agency_lang",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "agency_phone",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Agency_phone",
																			"type": "String"
																		}
																	}
																]
															}
														},
														"inputs": [
															{
																"referenceName": "GTFSAgency",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "SQLAgency",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													}
												]
											},
											{
												"value": "calendar_dates.txt",
												"activities": [
													{
														"name": "dataflowtocalendardatesSQL",
														"type": "ExecuteDataFlow",
														"dependsOn": [],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"dataflow": {
																"referenceName": "dataflowcalendardates",
																"type": "DataFlowReference",
																"parameters": {},
																"datasetParameters": {
																	"dataflowcalendardatessource": {},
																	"sinktocalendardatesSQLtable": {}
																}
															},
															"staging": {},
															"compute": {
																"coreCount": 8,
																"computeType": "General"
															}
														}
													}
												]
											},
											{
												"value": "calendar.txt",
												"activities": [
													{
														"name": "dataflowtocalendarSQLtable",
														"type": "ExecuteDataFlow",
														"dependsOn": [],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"dataflow": {
																"referenceName": "dataflowcalander",
																"type": "DataFlowReference",
																"parameters": {},
																"datasetParameters": {
																	"DataFlowCalendersource": {},
																	"sinktoSQLCalendar": {}
																}
															},
															"staging": {},
															"compute": {
																"coreCount": 8,
																"computeType": "General"
															}
														}
													}
												]
											},
											{
												"value": "routes.txt",
												"activities": [
													{
														"name": "Copy data routes SQL Table",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "DelimitedTextSource",
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															},
															"sink": {
																"type": "AzureSqlSink"
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "route_id",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Route_id",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "agency_id",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Agency_id",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "route_short_name",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Route_short_name",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "route_long_name",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Route_long_name",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "route_desc",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Route_desc",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "route_type",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Route_type",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "route_url",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Route_url",
																			"type": "String"
																		}
																	}
																]
															}
														},
														"inputs": [
															{
																"referenceName": "GTFSroutes",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "SQLroutes",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													}
												]
											},
											{
												"value": "shapes.txt",
												"activities": [
													{
														"name": "Copy data shapes SQL Table",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "DelimitedTextSource",
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															},
															"sink": {
																"type": "AzureSqlSink"
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "shape_id",
																			"type": "String"
																		},
																		"sink": {
																			"name": "shape_id",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "shape_pt_lat",
																			"type": "String"
																		},
																		"sink": {
																			"name": "shape_pt_lat",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "shape_pt_lon",
																			"type": "String"
																		},
																		"sink": {
																			"name": "shape_pt_lon",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "shape_pt_sequence",
																			"type": "String"
																		},
																		"sink": {
																			"name": "shape_pt_sequence",
																			"type": "String"
																		}
																	}
																]
															}
														},
														"inputs": [
															{
																"referenceName": "GTFSshapes",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "SQLshapes",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													}
												]
											},
											{
												"value": "stop_times.txt",
												"activities": [
													{
														"name": "Copy data stoptimes SQL Table",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "DelimitedTextSource",
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															},
															"sink": {
																"type": "AzureSqlSink"
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "trip_id",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Trip_id",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "arrival_time",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Arrival_time",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "departure_time",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Departure_time",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "stop_id",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Stop_id",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "stop_sequence",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Stop_sequence",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "pickup_type",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Pickup_type",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "drop_off_type",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Drop_off_type",
																			"type": "String"
																		}
																	}
																]
															}
														},
														"inputs": [
															{
																"referenceName": "GTFSstop_times",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "SQLstop_times",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													}
												]
											},
											{
												"value": "stops.txt",
												"activities": [
													{
														"name": "Copy data stops SQL Table",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "DelimitedTextSource",
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															},
															"sink": {
																"type": "AzureSqlSink"
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "stop_id",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Stop_id",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "stop_code",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Stop_code",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "stop_name",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Stop_name",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "stop_desc",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Stop_desc",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "stop_lat",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Stop_lat",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "stop_lon",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Stop_lon",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "zone_id",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Zone_id",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "stop_url",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Stop_url",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "location_type",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Location_type",
																			"type": "String"
																		}
																	}
																]
															}
														},
														"inputs": [
															{
																"referenceName": "GTFSstops",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "SQLstops",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													}
												]
											},
											{
												"value": "trips.txt",
												"activities": [
													{
														"name": "Copy data trips SQL Table",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "DelimitedTextSource",
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															},
															"sink": {
																"type": "AzureSqlSink"
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "route_id",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Route_id",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "service_id",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Service_id",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "trip_id",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Trip_id",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "trip_short_name",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Trip_short_name",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "direction_id",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Direction_id",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "block_id",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Block_id",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "shape_id",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Shape_id",
																			"type": "String"
																		}
																	}
																]
															}
														},
														"inputs": [
															{
																"referenceName": "GTFStrips",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "SQLtrips",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													}
												]
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "SQLtoGTFStoCRM",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ForEach",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SQLtoGTFS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"variables": {
					"fileName": {
						"type": "String",
						"defaultValue": "X"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-09-01T10:21:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflowcalendardates')]",
				"[concat(variables('factoryId'), '/dataflows/dataflowcalander')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GTFS_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GTFSZipfilestoDLS",
						"description": "t",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET",
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ZipFileGTFS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DLSV2GTFS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Get Metadata of GTFS folder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "GTFSZipfilestoDLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DLSV2GTFS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata of GTFS folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata of GTFS folder').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "SwitchToSQLTables",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@item().name",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "calendar_dates.txt",
												"activities": [
													{
														"name": "dataflowtocalendardatesSQL",
														"type": "ExecuteDataFlow",
														"dependsOn": [],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"dataflow": {
																"referenceName": "dataflowcalendardates",
																"type": "DataFlowReference",
																"parameters": {},
																"datasetParameters": {
																	"dataflowcalendardatessource": {},
																	"sinktocalendardatesSQLtable": {}
																}
															},
															"staging": {},
															"compute": {
																"coreCount": 8,
																"computeType": "General"
															}
														}
													}
												]
											},
											{
												"value": "calendar.txt",
												"activities": [
													{
														"name": "dataflowtocalendarSQLtable",
														"type": "ExecuteDataFlow",
														"dependsOn": [],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"dataflow": {
																"referenceName": "dataflowcalander",
																"type": "DataFlowReference",
																"parameters": {},
																"datasetParameters": {
																	"DataFlowCalendersource": {},
																	"sinktoSQLCalendar": {}
																}
															},
															"staging": {},
															"compute": {
																"coreCount": 8,
																"computeType": "General"
															}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"variables": {
					"fileName": {
						"type": "String",
						"defaultValue": "X"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-08-03T17:26:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflowcalendardates')]",
				"[concat(variables('factoryId'), '/dataflows/dataflowcalander')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GTFS_copy2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GTFSZipfilestoDLS",
						"description": "t",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET",
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ZipFileGTFS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Binary_GTFSZipFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Get Metadata of GTFS folder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "GTFSZipfilestoDLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DLSV2GTFS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata of GTFS folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata of GTFS folder').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "SwitchToSQLTables",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@item().name",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "agency.txt",
												"activities": [
													{
														"name": "Copy data to Agency SQL Table",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "DelimitedTextSource",
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															},
															"sink": {
																"type": "AzureSqlSink"
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "agency_id",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Agency_id",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "agency_name",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Agency_name",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "agency_url",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Agency_url",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "agency_timezone",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Agency_timezone",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "agency_lang",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Agency_lang",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "agency_phone",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Agency_phone",
																			"type": "String"
																		}
																	}
																]
															}
														},
														"inputs": [
															{
																"referenceName": "GTFSAgency",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "SQLAgency",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													}
												]
											},
											{
												"value": "calendar_dates.txt",
												"activities": [
													{
														"name": "dataflowtocalendardatesSQL",
														"type": "ExecuteDataFlow",
														"dependsOn": [],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"dataflow": {
																"referenceName": "dataflowcalendardates",
																"type": "DataFlowReference",
																"parameters": {},
																"datasetParameters": {
																	"dataflowcalendardatessource": {},
																	"sinktocalendardatesSQLtable": {}
																}
															},
															"staging": {},
															"compute": {
																"coreCount": 8,
																"computeType": "General"
															}
														}
													}
												]
											},
											{
												"value": "calendar.txt",
												"activities": [
													{
														"name": "dataflowtocalendarSQLtable",
														"type": "ExecuteDataFlow",
														"dependsOn": [],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"dataflow": {
																"referenceName": "dataflowcalander",
																"type": "DataFlowReference",
																"parameters": {},
																"datasetParameters": {
																	"DataFlowCalendersource": {},
																	"sinktoSQLCalendar": {}
																}
															},
															"staging": {},
															"compute": {
																"coreCount": 8,
																"computeType": "General"
															}
														}
													}
												]
											},
											{
												"value": "routes.txt",
												"activities": [
													{
														"name": "Copy data routes SQL Table",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "DelimitedTextSource",
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															},
															"sink": {
																"type": "AzureSqlSink"
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "route_id",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Route_id",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "agency_id",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Agency_id",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "route_short_name",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Route_short_name",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "route_long_name",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Route_long_name",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "route_desc",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Route_desc",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "route_type",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Route_type",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "route_url",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Route_url",
																			"type": "String"
																		}
																	}
																]
															}
														},
														"inputs": [
															{
																"referenceName": "GTFSroutes",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "SQLroutes",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													}
												]
											},
											{
												"value": "shapes.txt",
												"activities": [
													{
														"name": "Copy data shapes SQL Table",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "DelimitedTextSource",
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															},
															"sink": {
																"type": "AzureSqlSink"
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "shape_id",
																			"type": "String"
																		},
																		"sink": {
																			"name": "shape_id",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "shape_pt_lat",
																			"type": "String"
																		},
																		"sink": {
																			"name": "shape_pt_lat",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "shape_pt_lon",
																			"type": "String"
																		},
																		"sink": {
																			"name": "shape_pt_lon",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "shape_pt_sequence",
																			"type": "String"
																		},
																		"sink": {
																			"name": "shape_pt_sequence",
																			"type": "String"
																		}
																	}
																]
															}
														},
														"inputs": [
															{
																"referenceName": "GTFSshapes",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "SQLshapes",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													}
												]
											},
											{
												"value": "stop_times.txt",
												"activities": [
													{
														"name": "Copy data stoptimes SQL Table",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "DelimitedTextSource",
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															},
															"sink": {
																"type": "AzureSqlSink"
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "trip_id",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Trip_id",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "arrival_time",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Arrival_time",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "departure_time",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Departure_time",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "stop_id",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Stop_id",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "stop_sequence",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Stop_sequence",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "pickup_type",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Pickup_type",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "drop_off_type",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Drop_off_type",
																			"type": "String"
																		}
																	}
																]
															}
														},
														"inputs": [
															{
																"referenceName": "GTFSstop_times",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "SQLstop_times",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													}
												]
											},
											{
												"value": "stops.txt",
												"activities": [
													{
														"name": "Copy data stops SQL Table",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "DelimitedTextSource",
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															},
															"sink": {
																"type": "AzureSqlSink"
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "stop_id",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Stop_id",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "stop_code",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Stop_code",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "stop_name",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Stop_name",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "stop_desc",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Stop_desc",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "stop_lat",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Stop_lat",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "stop_lon",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Stop_lon",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "zone_id",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Zone_id",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "stop_url",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Stop_url",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "location_type",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Location_type",
																			"type": "String"
																		}
																	}
																]
															}
														},
														"inputs": [
															{
																"referenceName": "GTFSstops",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "SQLstops",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													}
												]
											},
											{
												"value": "trips.txt",
												"activities": [
													{
														"name": "Copy data trips SQL Table",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "DelimitedTextSource",
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															},
															"sink": {
																"type": "AzureSqlSink"
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "route_id",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Route_id",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "service_id",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Service_id",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "trip_id",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Trip_id",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "trip_short_name",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Trip_short_name",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "direction_id",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Direction_id",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "block_id",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Block_id",
																			"type": "String"
																		}
																	},
																	{
																		"source": {
																			"name": "shape_id",
																			"type": "String"
																		},
																		"sink": {
																			"name": "Shape_id",
																			"type": "String"
																		}
																	}
																]
															}
														},
														"inputs": [
															{
																"referenceName": "GTFStrips",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "SQLtrips",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													}
												]
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "SQLtoGTFStoCRM",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ForEach",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SQLtoGTFS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"variables": {
					"fileName": {
						"type": "String",
						"defaultValue": "X"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-09-01T10:21:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflowcalendardates')]",
				"[concat(variables('factoryId'), '/dataflows/dataflowcalander')]"
			]
		}
	]
}